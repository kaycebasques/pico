import("//build_overrides/pi_pico.gni")
import("//build_overrides/pigweed.gni")
import("$dir_pw_system/system_target.gni")

if (current_toolchain != default_toolchain) {
  config("config_includes") {
    include_dirs = [ "config" ]
  }
  pw_source_set("freertos_config") {
    public_configs = [ ":config_includes" ]
    public_deps = [ "$dir_pw_third_party/freertos:config_assert" ]
    print("dir_pw_third_party/freertos:config_assert=$dir_pw_third_party/freertos:config_assert")
    public = [ "config/FreeRTOSConfig.h" ]
  }
  pw_source_set("pre_init") {
    deps = [
      "$PICO_ROOT/src/common/pico_base",
      "$PICO_ROOT/src/common/pico_stdlib",
      "$PICO_ROOT/src/rp2_common/pico_malloc",
      "$dir_pw_string",
      "$dir_pw_system",
      "$dir_pw_third_party/freertos",
      # "//lib/rpc:kudzu_service",
    ]
    print("dir_pw_third_party/freertos=$dir_pw_third_party/freertos")
    sources = [ "boot.cc" ]
  }
}

pw_system_target("rp2040") {
  cpu = PW_SYSTEM_CPU.CORTEX_M0PLUS
  scheduler = PW_SYSTEM_SCHEDULER.FREERTOS
  use_pw_malloc = false
  global_configs = [ "$dir_pigweed/targets/rp2040:rp2040_hal_config" ]
  build_args = {
    pw_build_EXECUTABLE_TARGET_TYPE = "pico_executable"
    pw_build_EXECUTABLE_TARGET_TYPE_FILE =
        get_path_info("$dir_pigweed/targets/rp2040/pico_executable.gni", "abspath")
    pw_log_BACKEND = dir_pw_log_string
    pw_log_string_HANDLER_BACKEND = "$dir_pw_system:log_backend"
    pw_third_party_freertos_CONFIG = "//targets/rp2040:freertos_config"
    pw_third_party_freertos_PORT = "$dir_pw_third_party/freertos:arm_cm0"
    print("dir_pw_third_party=$dir_pw_third_party")
    pw_sys_io_BACKEND = dir_pw_sys_io_rp2040
    pw_build_LINK_DEPS += [
      "//targets/rp2040:pre_init",
      "$dir_pw_assert:impl",
      "$dir_pw_log:impl",
      "$dir_pw_log_string:handler.impl",
    ]
    pw_sync_COUNTING_SEMAPHORE_BACKEND =
        "$dir_pw_sync_freertos:counting_semaphore"
  }
}
